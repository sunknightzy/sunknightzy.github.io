{"title":"ES-01 ElasticSearch基础概念","uid":"4cd15f1f7166f2cddbe2d554199d5739","slug":"ES-01-ElasticSearch基础概念","date":"2018-09-14T03:26:09.000Z","updated":"2018-09-14T03:36:09.000Z","comments":true,"path":"api/articles/ES-01-ElasticSearch基础概念.json","keywords":null,"cover":"https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/abnerworks.Typora/blog-thumbnail-generic-release-CWWcnq.png","content":"<h2 id=\"Elasticsearch简介\"><a href=\"#Elasticsearch简介\" class=\"headerlink\" title=\"Elasticsearch简介\"></a>Elasticsearch简介</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 本文档基于 ElasticSearch 6.7 版本</p></blockquote>\n<h3 id=\"本质与定位\"><a href=\"#本质与定位\" class=\"headerlink\" title=\"本质与定位\"></a>本质与定位</h3><p>Elasticsearch 基于Apache Lucene构建的<strong>分布式搜索与分析引擎</strong>，采用RESTful API设计</p>\n<p>ES可以轻松扩展数以百计的服务器(水平扩展), 用于存储和处理数据. 它可以在很短的时间内存储、搜索和分析海量数据, 通常被作为复杂搜索场景下的核心引擎.</p>\n<h3 id=\"核心优势\"><a href=\"#核心优势\" class=\"headerlink\" title=\"核心优势\"></a>核心优势</h3><p>ElasticSearch VS RDB</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">特性</th>\n<th align=\"left\">传统数据库</th>\n<th align=\"left\">Elasticsearch</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">检索速度</td>\n<td align=\"left\">秒级</td>\n<td align=\"left\"><strong>毫秒级</strong>（倒排索引）</td>\n</tr>\n<tr>\n<td align=\"left\">扩展性</td>\n<td align=\"left\">垂直扩展</td>\n<td align=\"left\"><strong>水平扩展</strong>（自动分片）</td>\n</tr>\n<tr>\n<td align=\"left\">数据类型</td>\n<td align=\"left\">结构化为主</td>\n<td align=\"left\"><strong>结构化+文本+地理空间</strong></td>\n</tr>\n<tr>\n<td align=\"left\">容错性</td>\n<td align=\"left\">主从复制</td>\n<td align=\"left\"><strong>多副本自动恢复</strong></td>\n</tr>\n</tbody></table>\n<h3 id=\"典型使用场景\"><a href=\"#典型使用场景\" class=\"headerlink\" title=\"典型使用场景\"></a>典型使用场景</h3><ul>\n<li><strong>实时搜索</strong>：电商商品检索、新闻全文搜索</li>\n<li><strong>日志分析</strong>：ELK（Elasticsearch+Logstash+Kibana）日志监控</li>\n<li><strong>时序数据</strong>：APM（应用性能监控）指标存储</li>\n<li><strong>推荐系统</strong>：用户行为数据分析</li>\n</ul>\n<h2 id=\"功能概述\"><a href=\"#功能概述\" class=\"headerlink\" title=\"功能概述\"></a>功能概述</h2><table>\n<thead>\n<tr>\n<th align=\"left\">功能类别</th>\n<th align=\"left\">关键技术</th>\n<th align=\"left\">实战应用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><strong>数据索引</strong></td>\n<td align=\"left\"><code>_bulk</code> API、近实时(NRT)</td>\n<td align=\"left\">支持每秒万级写入</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>全文检索</strong></td>\n<td align=\"left\">分词器、BM25算法</td>\n<td align=\"left\">精准匹配+模糊搜索</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>聚合分析</strong></td>\n<td align=\"left\">Metric&#x2F;Bucket聚合</td>\n<td align=\"left\">替代部分OLAP场景</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>高可用</strong></td>\n<td align=\"left\">分片副本、集群选举</td>\n<td align=\"left\">99.95% SLA保障</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>数据可视化</strong></td>\n<td align=\"left\">Kibana集成</td>\n<td align=\"left\">快速构建监控大屏</td>\n</tr>\n</tbody></table>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"术语理解\"><a href=\"#术语理解\" class=\"headerlink\" title=\"术语理解\"></a>术语理解</h3><h4 id=\"Cluster-集群\"><a href=\"#Cluster-集群\" class=\"headerlink\" title=\"Cluster(集群)\"></a>Cluster(集群)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>集群由一至多个节点组成, 对外提供索引和搜索服务. 一个节点只能加入到一个集群中.</p>\n<p>一个集群是一个或多个节点（服务器）的集合，它们共同持有数据，并提供跨所有节点的联合索引和搜索功能。同一网络中，每个集群要有唯一名称标识，默认情况下该名称为”elasticsearch”。这个名称很重要，水平扩展时, 只需要将新增节点的集群名称设置为要扩容的集群名称, 该节点就会自动加入集群中.</p>\n<p>请确保在不同环境中不要重复使用相同的集群名称，否则可能会导致节点加入错误的集群。例如，你可以使用 <code>logging-dev</code> 、 <code>logging-stage</code> 和 <code>logging-prod</code> 作为开发、暂存和生产集群的名称.</p>\n<p>ES做到了去中心化: 访问任一节点等价于访问整个集群.</p></blockquote>\n<h4 id=\"Node-节点\"><a href=\"#Node-节点\" class=\"headerlink\" title=\"Node(节点)\"></a>Node(节点)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>节点是集群的一部分，是一个单独的服务器，用于存储数据，并参与集群的索引和搜索功能。就像集群一样，节点通过名称来标识，默认情况下是一个在节点启动时分配的随机通用唯一标识符（UUID）。如果不想使用默认值，可以定义任何想要的节点名称。此名称对于管理非常重要，它帮助你确定网络中的哪些服务器对应于 Elasticsearch 集群中的哪些节点。</p>\n<p>通过配置集群名称，可以将节点设置为加入特定的集群。默认情况下，每个节点都被设置为加入名为 <code>elasticsearch</code> 的集群，这意味着如果你在网络中启动多个节点并且它们能够互相发现，它们将自动形成并加入名为 <code>elasticsearch</code> 的单个集群。</p>\n<p>在一个集群中，你可以拥有任意数量的节点。此外，如果当前网络中没有其他正在运行的 Elasticsearch 节点，启动单个节点将默认形成一个名为 <code>elasticsearch</code> 的新单节点集群。</p></blockquote>\n<h4 id=\"Shard-分片\"><a href=\"#Shard-分片\" class=\"headerlink\" title=\"Shard(分片)\"></a>Shard(分片)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>单台机器(节点)无法存储大量的索引数据, ES可以把一个完整的索引分成多个分片, 分布到不同的节点上, 从而构成分布式索引.<br>每个分片都是一个Lucene实例, 也就是说每个分片底层都有一个单独的Lucene提供独立的索引和检索服务, 它们可以托管在集群的任一节点上.<br>单个Lucene中可存储文档是有限的,到目前版本，极限是<code>2147483519(=integer.max_value - 128)</code> 个文档. 可使用<code>_cat/shards</code> API 监控分片的大小.</p>\n<p>在创建索引时，可以为每个索引定义分片和副本的数量。在索引创建之后，还可以随时动态更改副本的数量。可以使用 <code>_shrink</code> 和 <code>_split</code> API 更改现有索引的分片数量，但这是一个复杂的任务，<strong>预先计划正确的分片数量是最优的方法</strong></p></blockquote>\n<p>分片的好处:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>允许水平切分&#x2F;扩展集群容量;<br>可在多个分片上进行分布式的、并行的操作, 提高系统的性能和吞吐量.</p></blockquote>\n<h4 id=\"Replica-副本\"><a href=\"#Replica-副本\" class=\"headerlink\" title=\"Replica(副本)\"></a>Replica(副本)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ES支持为每个Shard创建多个副本, 相当于索引数据的冗余备份.<br><strong>分片有Primary Shard(主分片)、Replica Shard(副本分片), 建立索引时, 系统会先将索引存储在主分片中, 然后再将主分片中的索引复制到不同的副本中.</strong></p></blockquote>\n<p>(1) 副本的重要性:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>① 解决单点问题, 提高可用性和容错性: 某个节点失败时服务不受影响, 可以从副本中恢复;<br>② 提高查询效率和查询时的吞吐量: 搜索可以在所有的副本上并行执行, 提高了服务的并发量.</p></blockquote>\n<p>(2) 使用注意事项:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>主分片在建立索引时设置, 后期不能修改;</strong><br>主分片和副本分片不能存储在同一个节点中 —— 无法保证高可用.<br>默认情况下，Elasticsearch 中的每个索引会被分配 5 个主分片和 1 个副本，这意味着如果你的集群中至少有两个节点，你的索引将有 5 个主分片和另外 5 个副本分片（1 个完整的副本），总共每个索引有 10 个分片</p></blockquote>\n<h4 id=\"River-数据源\"><a href=\"#River-数据源\" class=\"headerlink\" title=\"River(数据源)\"></a>River(数据源)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>从其他存储方式 (如数据库) 中同步数据到ES的方法, 它是以插件方式存在的一个ES服务, 通过读取river中的数据并把它索引到ES中.<br>官方的river有CouchDB、RabbitMQ、Twitter、Wikipedia等.</p></blockquote>\n<h4 id=\"Recovery-数据恢复\"><a href=\"#Recovery-数据恢复\" class=\"headerlink\" title=\"Recovery(数据恢复)\"></a>Recovery(数据恢复)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>又叫数据重新分布: 当有节点加入或退出时, ES会根据机器的负载对索引分片进行重新分配, 挂掉的节点重新启动时也会进行数据恢复.<br>Kibana工具中通过 <code>GET _cat/health?v</code>, 就可以看到集群所处的状态.</p></blockquote>\n<h4 id=\"Index-索引\"><a href=\"#Index-索引\" class=\"headerlink\" title=\"Index (索引)\"></a>Index (索引)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>索引是具有相似结构的文档的集合, 等同于Solr中的集合, 比如可以有一个商品分类索引, 订单索引.<br>每个索引都要有唯一的名称, 名称要小写, 通过索引名称来执行新增、搜索、更新和删除等操作.</p></blockquote>\n<h4 id=\"Type-类型\"><a href=\"#Type-类型\" class=\"headerlink\" title=\"Type(类型)\"></a>Type(类型)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>type 是 index 的逻辑分类, <strong>在 6.0.0 版本中弃用</strong><br>在 ES 6.0.0 版本之前, 每个索引中可以定义一个或多个 type<br>type 和 数据库中的表类似, 比如对博客系统中的数据建立索引, 可以定义用户数据 type , 博客数据 type , 评论数据 type , 每个 document 都必须属于某一个具体的 type , 也就是说每个 document 都有 <code>_type</code> 属性.</p></blockquote>\n<h4 id=\"Document-文档\"><a href=\"#Document-文档\" class=\"headerlink\" title=\"Document(文档)\"></a>Document(文档)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>文档是存储在ES中的一个个JSON格式的字符串, 是ES索引中的最小数据单元, 由 field(字段) 构成.</p>\n<p>文档类似于数据库中表里的数据行Row</p></blockquote>\n<h4 id=\"Mapping-映射\"><a href=\"#Mapping-映射\" class=\"headerlink\" title=\"Mapping(映射)\"></a>Mapping(映射)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>类似于关系数据库中的Table结构, 每个index都有一个映射: 定义索引中每个字段的类型.<br><strong>所有文档在写进索引之前都会先进行分析, 如何对文本进行分词、哪些词条又会被过滤, 这类行为叫做映射(mapping).</strong><br>映射可以提前定义, 也可以在第一次存储文档时自动识别. 一般由用户自己定义规则.</p></blockquote>\n<h4 id=\"Field-字段\"><a href=\"#Field-字段\" class=\"headerlink\" title=\"Field(字段)\"></a>Field(字段)</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>字段可以是一个简单的值，每个字段都有类型，如：字符串、数字、日期, 也可以是一个数组, 还可以嵌套一个对象或多个对象.<br>字段类似于关系数据库中表数据的列, 每个字段都对应一个类型.<br>可以对 field 指定分词器，指定如何分析字段的值</p></blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"left\">术语</th>\n<th align=\"left\">说明</th>\n<th align=\"left\">类比关系型数据库</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><strong>Index</strong></td>\n<td align=\"left\">索引是具有某种相似特征的文档集合</td>\n<td align=\"left\">Database 数据库</td>\n</tr>\n<tr>\n<td align=\"left\"><del>Type</del></td>\n<td align=\"left\">类型用于索引逻辑分区，已在 6.0.0 版本中<strong>弃用</strong></td>\n<td align=\"left\">Table 数据表</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Document</strong></td>\n<td align=\"left\">文档是可被索引的基本信息单元（JSON）</td>\n<td align=\"left\">Row 数据行</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Field</strong></td>\n<td align=\"left\">文档属性</td>\n<td align=\"left\">Column 列</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Mapping</strong></td>\n<td align=\"left\">字段类型定义</td>\n<td align=\"left\">Schema 表结构</td>\n</tr>\n</tbody></table>\n<h2 id=\"ElasticSearch基础模块\"><a href=\"#ElasticSearch基础模块\" class=\"headerlink\" title=\"ElasticSearch基础模块\"></a>ElasticSearch基础模块</h2><h3 id=\"分层架构\"><a href=\"#分层架构\" class=\"headerlink\" title=\"分层架构\"></a>分层架构</h3><p><img src=\"https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/abnerworks.Typora/e9fb78748c414bd69f9c008123c88d8b-lBIFP3.png\" alt=\"img\"></p>\n<p>通过这种模块化设计，Elasticsearch实现了高内聚低耦合的架构，既能处理PB级数据，又能保持毫秒级响应能力。</p>\n<h3 id=\"核心功能模块\"><a href=\"#核心功能模块\" class=\"headerlink\" title=\"核心功能模块\"></a>核心功能模块</h3><table>\n<thead>\n<tr>\n<th align=\"left\"><strong>模块名称</strong></th>\n<th align=\"left\"><strong>核心职责</strong></th>\n<th align=\"left\"><strong>关键组件</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><strong>Cluster Module</strong></td>\n<td align=\"left\">集群管理</td>\n<td align=\"left\">- 节点发现（Zen Discovery）<br />- 主节点选举<br />- 集群状态同步 <br />- 分片分配策略</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Index Module</strong></td>\n<td align=\"left\">索引生命周期管理</td>\n<td align=\"left\">- 索引创建&#x2F;删除 <br />- Shard分配控制 <br />- 索引设置（settings） <br />- 索引模板管理</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Search Module</strong></td>\n<td align=\"left\">查询处理</td>\n<td align=\"left\">- Query解析（Query DSL）<br />- 分布式搜索执行 <br />- 结果聚合（Aggregations） <br />- 相关性评分（BM25）</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Ingest Module</strong></td>\n<td align=\"left\">数据预处理</td>\n<td align=\"left\">- Pipeline定义 <br />- Processor链（如Grok&#x2F;Date&#x2F;GeoIP） <br />- 数据富化&#x2F;转换</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Mapping Module</strong></td>\n<td align=\"left\">数据类型管理</td>\n<td align=\"left\">- 字段类型定义（text&#x2F;keyword&#x2F;date等） <br />- 动态映射（Dynamic Mapping） <br />- 字段分析器配置</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Persistence</strong></td>\n<td align=\"left\">数据持久化</td>\n<td align=\"left\">- Translog（事务日志） <br />- Lucene Segment管理 <br />- 数据刷盘（Flush） <br />- 快照&#x2F;恢复</td>\n</tr>\n</tbody></table>\n<h4 id=\"一、网络与通信模块\"><a href=\"#一、网络与通信模块\" class=\"headerlink\" title=\"一、网络与通信模块\"></a>一、网络与通信模块</h4><h5 id=\"Transport-Module\"><a href=\"#Transport-Module\" class=\"headerlink\" title=\"Transport Module\"></a>Transport Module</h5><p>用于集群内节点之间的内部通信</p>\n<p><strong>实现方式</strong>：</p>\n<ul>\n<li>基于Netty的TCP通信</li>\n<li>零拷贝压缩传输</li>\n<li>集群拓扑感知路由</li>\n</ul>\n<p><strong>关键协议</strong>：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme\" style=\"background-color: #263238\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #546E7A; font-style: italic\">// 节点间请求类型示例</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">enum</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">TransportAction</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  INDEX_SHARD</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\">       </span><span style=\"color: #546E7A; font-style: italic\">// 分片写入</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  SEARCH_SHARD</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\">      </span><span style=\"color: #546E7A; font-style: italic\">// 分片搜索</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  RECOVERY</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\">          </span><span style=\"color: #546E7A; font-style: italic\">// 数据恢复</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  CLUSTER_STATE_UPDATE </span><span style=\"color: #546E7A; font-style: italic\">// 集群状态更新</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"HTTP-Module\"><a href=\"#HTTP-Module\" class=\"headerlink\" title=\"HTTP Module\"></a>HTTP Module</h5><p>HTTP模块允许通过 JSON over HTTP 的方式访问 ES 的API, HTTP模块本质上是完全异步的，这意味着没有阻塞线程等待响应。使用异步通信进行 HTTP 的好处是解决了 C10k 问题（10k量级的并发连接）</p>\n<p><strong>特性</strong></p>\n<ul>\n<li>9200端口提供REST接口</li>\n<li>JSON请求&#x2F;响应处理</li>\n<li>基于Jetty的HTTP服务</li>\n</ul>\n<p><strong>使用示例</strong></p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme\" style=\"background-color: #263238\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">GET</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">/_cluster/health</span><span style=\"color: #EEFFFF\">      </span><span style=\"color: #546E7A; font-style: italic\"># 集群健康检查</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">POST</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">/index/_search</span><span style=\"color: #EEFFFF\">       </span><span style=\"color: #546E7A; font-style: italic\"># 执行搜索</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">PUT</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">/index/_doc/1</span><span style=\"color: #EEFFFF\">         </span><span style=\"color: #546E7A; font-style: italic\"># 文档写入</span></span></code></pre></div><h4 id=\"二、数据处理核心模块\"><a href=\"#二、数据处理核心模块\" class=\"headerlink\" title=\"二、数据处理核心模块\"></a>二、数据处理核心模块</h4><h5 id=\"Lucene-Module\"><a href=\"#Lucene-Module\" class=\"headerlink\" title=\"Lucene Module\"></a>Lucene Module</h5><p>Elasticsearch 的存储引擎</p>\n<p><strong>核心功能</strong></p>\n<ul>\n<li><strong>倒排索引</strong>：Term → Document映射</li>\n<li><strong>Doc Values</strong>：列式存储（用于聚合排序）</li>\n<li><strong>Segment合并</strong>：后台优化索引结构</li>\n<li><strong>近实时搜索</strong>：通过<code>refresh</code>可见新数据</li>\n</ul>\n<h5 id=\"Analysis-Module\"><a href=\"#Analysis-Module\" class=\"headerlink\" title=\"Analysis Module\"></a>Analysis Module</h5><p><strong>文本处理流水线</strong>：</p>\n<p><img src=\"https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/Downloads/es_analysis-9lJMkJ.png\" alt=\"es_analysis\"></p>\n<p><strong>组件作用</strong></p>\n<ul>\n<li><strong>Char Filter</strong>：HTML标签去除&#x2F;字符替换</li>\n<li><strong>Tokenizer</strong>：按规则切分文本（如标准分词器）</li>\n<li><strong>Token Filter</strong>：小写转换&#x2F;同义词&#x2F;停用词处理</li>\n</ul>\n<h4 id=\"三、分布式协调模块\"><a href=\"#三、分布式协调模块\" class=\"headerlink\" title=\"三、分布式协调模块\"></a>三、分布式协调模块</h4><h5 id=\"Discovery-Module\"><a href=\"#Discovery-Module\" class=\"headerlink\" title=\"Discovery Module\"></a>Discovery Module</h5><p><strong>节点发现机制</strong></p>\n<p>![es_ discovery](<a target=\"_blank\" rel=\"noopener\" href=\"https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/Downloads/es\">https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/Downloads/es</a>_ discovery-qIgkjO.png)</p>\n<p><strong>实现方式</strong></p>\n<ul>\n<li>Zen Discovery（内置）</li>\n<li>EC2（AWS&#x2F;Azure云平台发现插件）</li>\n</ul>\n<h5 id=\"Allocation-Module\"><a href=\"#Allocation-Module\" class=\"headerlink\" title=\"Allocation Module\"></a>Allocation Module</h5><p>封装了分片分配相关的功能和策略，包括主分片的分配和副分片的分配，本模块由主节点调用</p>\n<p><strong>分片分配策略</strong></p>\n<ul>\n<li><strong>平衡策略</strong>：基于磁盘使用率&#x2F;分片数量</li>\n<li><strong>感知策略</strong>：跨机架&#x2F;可用区部署</li>\n<li><strong>过滤规则</strong>：指定节点属性分配</li>\n</ul>\n<p><strong>配置示例</strong></p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme\" style=\"background-color: #263238\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">PUT</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">_cluster/settings</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #FFCB6B\">&quot;routing.allocation.awareness.attributes&quot;</span><span style=\"color: #82AAFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">rack_id</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #FFCB6B\">&quot;routing.allocation.exclude._ip&quot;</span><span style=\"color: #82AAFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">192.168.1.*</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h4 id=\"四、高可用与容错模块\"><a href=\"#四、高可用与容错模块\" class=\"headerlink\" title=\"四、高可用与容错模块\"></a>四、高可用与容错模块</h4><h5 id=\"Recovery-Module\"><a href=\"#Recovery-Module\" class=\"headerlink\" title=\"Recovery Module\"></a>Recovery Module</h5><p><strong>故障恢复类型</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>场景</strong></th>\n<th align=\"left\"><strong>恢复机制</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">节点重启</td>\n<td align=\"left\">本地分片恢复</td>\n</tr>\n<tr>\n<td align=\"left\">主分片故障</td>\n<td align=\"left\">副本提升（Promote Replica）</td>\n</tr>\n<tr>\n<td align=\"left\">新增副本</td>\n<td align=\"left\">全量复制（Peer Recovery）</td>\n</tr>\n</tbody></table>\n<h5 id=\"Replication-Module\"><a href=\"#Replication-Module\" class=\"headerlink\" title=\"Replication Module\"></a>Replication Module</h5><h4 id=\"五、资源管理模块\"><a href=\"#五、资源管理模块\" class=\"headerlink\" title=\"五、资源管理模块\"></a>五、资源管理模块</h4><h5 id=\"Circuit-Breaker\"><a href=\"#Circuit-Breaker\" class=\"headerlink\" title=\"Circuit Breaker\"></a>Circuit Breaker</h5><p>断路器，防止OOM的保护机制</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>断路器类型</strong></th>\n<th align=\"left\"><strong>防护目标</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>Parent Circuit Breaker</code></td>\n<td align=\"left\">总内存使用</td>\n</tr>\n<tr>\n<td align=\"left\"><code>Field Data</code></td>\n<td align=\"left\">字段数据缓存</td>\n</tr>\n<tr>\n<td align=\"left\"><code>Request</code></td>\n<td align=\"left\">单个请求内存</td>\n</tr>\n<tr>\n<td align=\"left\"><code>In Flight Requests</code></td>\n<td align=\"left\">传输中请求内存</td>\n</tr>\n</tbody></table>\n<h5 id=\"Thread-Pools\"><a href=\"#Thread-Pools\" class=\"headerlink\" title=\"Thread Pools\"></a>Thread Pools</h5><p>线程池分工</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>线程池</strong></th>\n<th align=\"left\"><strong>用途</strong></th>\n<th align=\"left\"><strong>默认队列大小</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>search</code></td>\n<td align=\"left\">搜索请求处理</td>\n<td align=\"left\">1000</td>\n</tr>\n<tr>\n<td align=\"left\"><code>write</code></td>\n<td align=\"left\">索引&#x2F;删除操作</td>\n<td align=\"left\">200</td>\n</tr>\n<tr>\n<td align=\"left\"><code>refresh</code></td>\n<td align=\"left\">索引刷新操作</td>\n<td align=\"left\">无队列</td>\n</tr>\n<tr>\n<td align=\"left\"><code>snapshot</code></td>\n<td align=\"left\">快照操作</td>\n<td align=\"left\">无队列</td>\n</tr>\n</tbody></table>\n<h4 id=\"六、扩展性模块\"><a href=\"#六、扩展性模块\" class=\"headerlink\" title=\"六、扩展性模块\"></a>六、扩展性模块</h4><h5 id=\"Plugin-Module\"><a href=\"#Plugin-Module\" class=\"headerlink\" title=\"Plugin Module\"></a>Plugin Module</h5><p>扩展机制</p>\n<ul>\n<li><strong>分析插件</strong>：IK分词器（中文分词）</li>\n<li><strong>发现插件</strong>：EC2发现（AWS环境）</li>\n<li><strong>安全插件</strong>：OpenID Connect集成</li>\n</ul>\n<p>安装示例</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme\" style=\"background-color: #263238\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">./bin/elasticsearch-plugin</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">analysis-icu</span></span></code></pre></div><h5 id=\"Scripting-Module\"><a href=\"#Scripting-Module\" class=\"headerlink\" title=\"Scripting Module\"></a>Scripting Module</h5><p>脚本引擎支持</p>\n<ul>\n<li>Painless：默认安全脚本语言</li>\n<li>Expression：高性能数学计算</li>\n<li>Mustache：模板渲染</li>\n<li>Python</li>\n<li>JavaScript</li>\n</ul>\n<p>使用场景：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme\" style=\"background-color: #263238\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">GET</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">/_search</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #FFCB6B\">&quot;script_fields&quot;</span><span style=\"color: #82AAFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #FFCB6B\">&quot;discounted_price&quot;</span><span style=\"color: #82AAFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">      </span><span style=\"color: #FFCB6B\">&quot;script&quot;</span><span style=\"color: #82AAFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">        </span><span style=\"color: #FFCB6B\">&quot;source&quot;</span><span style=\"color: #82AAFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">doc[&#39;price&#39;].value * params.discount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">        </span><span style=\"color: #FFCB6B\">&quot;params&quot;</span><span style=\"color: #82AAFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C3E88D\">&#123;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">discount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">0.8</span><span style=\"color: #C3E88D\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">&#125;</span></span></code></pre></div><h3 id=\"模块协作示例\"><a href=\"#模块协作示例\" class=\"headerlink\" title=\"模块协作示例\"></a>模块协作示例</h3><p>搜索请求流程</p>\n<p><img src=\"https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/Downloads/search_progress-sI0yhL.png\" alt=\"search_progress\"></p>\n","feature":true,"text":"文章简述了ElasticSearch的定义、优势、使用场景以及基本概念（Node、Replica、Index、Type、Document、Field、Mapping等），通过图表展示了ElasticSearch的分层架构和模块组成...","permalink":"/post/ES-01-ElasticSearch基础概念","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"ElasticSearch系列","slug":"ElasticSearch系列","count":5,"path":"api/categories/ElasticSearch系列.json"}],"tags":[{"name":"ElasticSearch","slug":"ElasticSearch","count":6,"path":"api/tags/ElasticSearch.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Elasticsearch%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">Elasticsearch简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E8%B4%A8%E4%B8%8E%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">本质与定位</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">核心优势</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B8%E5%9E%8B%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">典型使用场景</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%9F%E8%83%BD%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">功能概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基本概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AF%E8%AF%AD%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">术语理解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Cluster-%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">Cluster(集群)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Node-%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">Node(节点)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Shard-%E5%88%86%E7%89%87\"><span class=\"toc-text\">Shard(分片)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Replica-%E5%89%AF%E6%9C%AC\"><span class=\"toc-text\">Replica(副本)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#River-%E6%95%B0%E6%8D%AE%E6%BA%90\"><span class=\"toc-text\">River(数据源)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Recovery-%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">Recovery(数据恢复)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Index-%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">Index (索引)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Type-%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Type(类型)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Document-%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">Document(文档)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Mapping-%E6%98%A0%E5%B0%84\"><span class=\"toc-text\">Mapping(映射)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Field-%E5%AD%97%E6%AE%B5\"><span class=\"toc-text\">Field(字段)</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ElasticSearch%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">ElasticSearch基础模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">分层架构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">核心功能模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%BD%91%E7%BB%9C%E4%B8%8E%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">一、网络与通信模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Transport-Module\"><span class=\"toc-text\">Transport Module</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#HTTP-Module\"><span class=\"toc-text\">HTTP Module</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">二、数据处理核心模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Lucene-Module\"><span class=\"toc-text\">Lucene Module</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Analysis-Module\"><span class=\"toc-text\">Analysis Module</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%B0%83%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">三、分布式协调模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Discovery-Module\"><span class=\"toc-text\">Discovery Module</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Allocation-Module\"><span class=\"toc-text\">Allocation Module</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E9%AB%98%E5%8F%AF%E7%94%A8%E4%B8%8E%E5%AE%B9%E9%94%99%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">四、高可用与容错模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Recovery-Module\"><span class=\"toc-text\">Recovery Module</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Replication-Module\"><span class=\"toc-text\">Replication Module</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">五、资源管理模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Circuit-Breaker\"><span class=\"toc-text\">Circuit Breaker</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Thread-Pools\"><span class=\"toc-text\">Thread Pools</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E6%89%A9%E5%B1%95%E6%80%A7%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">六、扩展性模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Plugin-Module\"><span class=\"toc-text\">Plugin Module</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Scripting-Module\"><span class=\"toc-text\">Scripting Module</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9D%97%E5%8D%8F%E4%BD%9C%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">模块协作示例</span></a></li></ol></li></ol>","author":{"name":"GlassCat","slug":"blog-author","avatar":"/img/avatar.png","link":"/","description":"《论语·为政》<br/>吾尝终日不食，终夜不寝，以思无益，不如学也<br/>--孔子--","socials":{"github":"https://github.com/sunknightzy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/someaware","csdn":"","juejin":"","customs":{"mail":{"icon":"/svg/mail.svg","link":"mailto:593739859@qq.com"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"ES-02 Kibana的使用方法","uid":"4775e6c7c44b69c5a8eee7dc43222d3a","slug":"ES-02-Kibana的使用方法","date":"2018-09-14T04:26:09.000Z","updated":"2018-09-14T04:36:19.000Z","comments":true,"path":"api/articles/ES-02-Kibana的使用方法.json","keywords":null,"cover":"https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/abnerworks.Typora/blog-thumbnail-generic-release-CWWcnq.png","text":"文章介绍了Kibana的基础功能，索引管理，文档管理...","permalink":"/post/ES-02-Kibana的使用方法","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"ElasticSearch系列","slug":"ElasticSearch系列","count":5,"path":"api/categories/ElasticSearch系列.json"}],"tags":[{"name":"ElasticSearch","slug":"ElasticSearch","count":6,"path":"api/tags/ElasticSearch.json"},{"name":"Kibana","slug":"Kibana","count":2,"path":"api/tags/Kibana.json"}],"author":{"name":"GlassCat","slug":"blog-author","avatar":"/img/avatar.png","link":"/","description":"《论语·为政》<br/>吾尝终日不食，终夜不寝，以思无益，不如学也<br/>--孔子--","socials":{"github":"https://github.com/sunknightzy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/someaware","csdn":"","juejin":"","customs":{"mail":{"icon":"/svg/mail.svg","link":"mailto:593739859@qq.com"}}}},"feature":true},"next_post":{"title":"Docker搭建Nacos","uid":"b80b88ff323cbedbe9f9c88d7ffb2f8f","slug":"Docker搭建Nacos","date":"2018-04-04T06:31:11.000Z","updated":"2025-05-05T13:49:36.000Z","comments":true,"path":"api/articles/Docker搭建Nacos.json","keywords":null,"cover":"https://raw.githubusercontent.com/sunknightzy/picsee/main/Picsee/abnerworks.Typora/coverw5P6d6-KtzFAP.png","text":"💡 全文聚焦 Docker 环境下基于 MySQL 模式的 Nacos 单机部署，包含目录结构、配置模板和容器启动命令以及解决 Dubbo 连接失败的问题","permalink":"/post/Docker搭建Nacos","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Docker","slug":"Docker","count":6,"path":"api/categories/Docker.json"},{"name":"Nacos","slug":"Docker/Nacos","count":1,"path":"api/categories/Docker/Nacos.json"}],"tags":[{"name":"Docker","slug":"Docker","count":6,"path":"api/tags/Docker.json"},{"name":"Nacos","slug":"Nacos","count":1,"path":"api/tags/Nacos.json"}],"author":{"name":"GlassCat","slug":"blog-author","avatar":"/img/avatar.png","link":"/","description":"《论语·为政》<br/>吾尝终日不食，终夜不寝，以思无益，不如学也<br/>--孔子--","socials":{"github":"https://github.com/sunknightzy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/someaware","csdn":"","juejin":"","customs":{"mail":{"icon":"/svg/mail.svg","link":"mailto:593739859@qq.com"}}}},"feature":true}}